// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	models "ml-mutant-test/db/models"

	mock "github.com/stretchr/testify/mock"
)

// MutantRepositoryInterface is an autogenerated mock type for the MutantRepositoryInterface type
type MutantRepositoryInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: mutant
func (_m *MutantRepositoryInterface) Create(mutant *models.Mutant) {
	_m.Called(mutant)
}

// GetByDNA provides a mock function with given fields: dna
func (_m *MutantRepositoryInterface) GetByDNA(dna []string) (models.Mutant, error) {
	ret := _m.Called(dna)

	var r0 models.Mutant
	if rf, ok := ret.Get(0).(func([]string) models.Mutant); ok {
		r0 = rf(dna)
	} else {
		r0 = ret.Get(0).(models.Mutant)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(dna)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetStats provides a mock function with given fields:
func (_m *MutantRepositoryInterface) GetStats() (models.Stats, error) {
	ret := _m.Called()

	var r0 models.Stats
	if rf, ok := ret.Get(0).(func() models.Stats); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.Stats)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
